# CREATE A BOX UBUNTU BIONIC
$script_mysql = <<-SCRIPT
    apt-get update && \
    apt-get install -y mysql-server-5.7 && \
    mysql -e "create user 'phpuser'@'%' identified by 'pass';"
SCRIPT

# Grab the name of the default interface
$default_network_interface = `ip route | grep -E "^default" | awk '{printf "%s", $5; exit 0}'`

Vagrant.configure("2") do |config|

  # BOX
  config.vm.box = "ubuntu/bionic64"

  # VM MYSQL
  #config.vm.define "mysqldb" do |mysql|    
    # NETWORK CONFIGS
    #config.vm.network "private_network", ip: "192.168.51.129"
    #config.vm.network "private_network", type: "dhcp"
    #config.vm.network "public_network"
    #mysql.vm.network "public_network" ,ip: "192.168.0.132" ,bridge:"#$default_network_interface"

    # MOUNTS
    #mysql.vm.synced_folder "./configs", "/configs"
    #mysql.vm.synced_folder ".", "/vagrant", disabled: true
  
    # SHELL PROVISION
    # config.vm.provision "shell", inline: "echo Hello, World"

    # SSH
    #mysql.vm.provision "shell", 
      #inline: "cat /configs/id_rsa.pub >> .ssh/authorized_keys"  

    # INSTALL MYSQL SERVER
    #mysql.vm.provision "shell", inline: $script_mysql 
    #mysql.vm.provision "shell",
      #inline: "cat /configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf" 
    #mysql.vm.provision "shell",inline: "service mysql restart"
  #end

  # VM PHP
  config.vm.define "phpweb" do |phpweb|
    
    # NETWORK CONFIGS
    phpweb.vm.network "forwarded_port", guest: 8888, host: 8888    
    phpweb.vm.network "public_network" ,ip: "192.168.0.133",bridge:"#$default_network_interface"
    
    # MOUNTS
    phpweb.vm.synced_folder "./configs", "/configs"   
    
    # SSH
    phpweb.vm.provision "shell",
      inline: "cat /vagrant/configs/id_rsa.pub >> .ssh/authorized_keys"

    # INSTALL PUPPET
    phpweb.vm.provision "shell",
      inline: "apt-get update && apt-get install puppet -y"
    
    phpweb.vm.provision "puppet" do |puppet|
      puppet.manifests_path = "./configs/manifests"
      puppet.manifest_file = "phpweb.pp"
    end 

  end

  # VM MYSQLSERVER
  config.vm.define "mysqlserver" do |mysqlserver|    
    # NETWORK CONFIGS    
    mysqlserver.vm.network "public_network" ,ip: "192.168.0.134",bridge:"#$default_network_interface"
   
    # SSH
    mysqlserver.vm.provision "shell",
      inline: "cat /vagrant/configs/id_rsa.pub >> .ssh/authorized_keys"      
    
    # ANSIBLE
    mysqlserver.vm.provision "ansible" do |ansible|
      ansible.playbook = "configs/ansible/playbook.yml"
    end
  
  end

  # VM ANSIBLE
  #config.vm.define "ansible" do |ansible|
   
   # NETWORK CONFIGS
    #ansible.vm.network "public_network" ,ip: "192.168.0.135",bridge:"#$default_network_interface"

   # SSH
     #ansible.vm.provision "shell",
       #inline: "cp /vagrant/id_rsa  /home/vagrant && \
       #chmod 600 /home/vagrant/id_rsa && \
       #chown vagrant:vagrant /home/vagrant/id_rsa"
      
   # INSTALL ANSIBLE
   #ansible.vm.provision "shell",
     #inline: "apt-get update && \     
              #apt-get install -y software-properties-common && \
	      #apt-add-repository --yes --update  ppa:ansible/ansible && \     
	      #apt-get install -y  ansible" 
  #end
  
end
